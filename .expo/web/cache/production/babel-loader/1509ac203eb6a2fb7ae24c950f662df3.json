{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{version as rnVersion}from'react-native/package.json';export function toArray(object){if(!Array.isArray(object)){return[object];}return object;}export function withPrevAndCurrent(array,mapFn){var previousArr=[null];var currentArr=_toConsumableArray(array);var transformedArr=[];currentArr.forEach(function(current,i){var previous=previousArr[i];var transformed=mapFn(previous,current);previousArr.push(transformed);transformedArr.push(transformed);});return transformedArr;}export function hasProperty(object,key){return Object.prototype.hasOwnProperty.call(object,key);}export function isJestEnv(){return hasProperty(global,'process')&&!!process.env.JEST_WORKER_ID;}export function tagMessage(msg){return\"[react-native-gesture-handler] \"+msg;}export function isFabric(){var _global;return!!((_global=global)!==null&&_global!==void 0&&_global.nativeFabricUIManager);}export function shouldUseCodegenNativeComponent(){var _rnVersion$split=rnVersion.split('.'),_rnVersion$split2=_slicedToArray(_rnVersion$split,2),majorStr=_rnVersion$split2[0],minorStr=_rnVersion$split2[1];var major=Number.parseInt(majorStr);var minor=Number.parseInt(minorStr);return minor>=68||major>0;}export function isRemoteDebuggingEnabled(){return!global.nativeCallSyncHook||global.__REMOTEDEV__;}","map":{"version":3,"sources":["utils.ts"],"names":["version","Array","previousArr","currentArr","transformedArr","previous","transformed","mapFn","Object","hasProperty","process","global","rnVersion","major","Number","minor"],"mappings":"0IAAA,OAASA,OAAO,GAAhB,CAAA,SAAA,KAAA,2BAAA,CAEA,MAAO,SAAA,CAAA,OAAA,CAAA,MAAA,CAA0C,CAC/C,GAAI,CAACC,KAAK,CAALA,OAAAA,CAAL,MAAKA,CAAL,CAA4B,CAC1B,MAAO,CAAP,MAAO,CAAP,CACD,CAED,MAAA,CAAA,MAAA,CACD,CAMD,MAAO,SAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,KAAA,CAGU,CACf,GAAMC,CAAAA,WAAmC,CAAG,CAA5C,IAA4C,CAA5C,CACA,GAAMC,CAAAA,UAAU,oBAAhB,KAAgB,CAAhB,CACA,GAAMC,CAAAA,cAA6B,CAAnC,EAAA,CACAD,UAAU,CAAVA,OAAAA,CAAmB,SAAA,OAAA,CAAA,CAAA,CAAgB,CACjC,GAAME,CAAAA,QAAQ,CAAGH,WAAW,CAA5B,CAA4B,CAA5B,CACA,GAAMI,CAAAA,WAAW,CAAGC,KAAK,CAAA,QAAA,CAAzB,OAAyB,CAAzB,CACAL,WAAW,CAAXA,IAAAA,CAAAA,WAAAA,EACAE,cAAc,CAAdA,IAAAA,CAAAA,WAAAA,EAJFD,CAAAA,EAMA,MAAA,CAAA,cAAA,CAGF,CACA,MAAO,SAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,CAAkD,CACvD,MAAOK,CAAAA,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAP,GAAOA,CAAP,CACD,CAED,MAAO,SAAA,CAAA,SAAA,EAA8B,CAEnC,MAAOC,CAAAA,WAAW,CAAA,MAAA,CAAXA,SAAW,CAAXA,EAAkC,CAAC,CAACC,OAAO,CAAPA,GAAAA,CAA3C,cAAA,CACD,CAED,MAAO,SAAA,CAAA,UAAA,CAAA,GAAA,CAAiC,CACtC,wCAAA,GAAA,CAGF,CAEA,MAAO,SAAA,CAAA,QAAA,EAA6B,CAAA,GAAA,CAAA,OAAA,CAElC,MAAO,CAAC,EAAA,CAAA,OAAA,CAAA,MAAA,IAAA,IAAA,EAAA,OAAA,GAAA,IAAA,EAAA,EAACC,OAAAA,CAAT,qBAAQ,CAAR,CACD,CAED,MAAO,SAAA,CAAA,+BAAA,EAAoD,CACzD,qBAA6BC,SAAS,CAATA,KAAAA,CAA7B,GAA6BA,CAA7B,sDAAM,QAAN,sBAAM,QAAN,sBACA,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAANA,QAAAA,CAAd,QAAcA,CAAd,CACA,GAAMC,CAAAA,KAAK,CAAGD,MAAM,CAANA,QAAAA,CAH2C,QAG3CA,CAAd,CAGA,MAAOC,CAAAA,KAAK,EAALA,EAAAA,EAAeF,KAAK,CAA3B,CAAA,CACD,CAED,MAAO,SAAA,CAAA,wBAAA,EAA6C,CAGlD,MAAO,CAAEF,MAAD,CAAD,kBAAA,EAAwCA,MAAD,CAA9C,aAAA,CACD","sourcesContent":["import { version as rnVersion } from 'react-native/package.json';\n\nexport function toArray<T>(object: T | T[]): T[] {\n  if (!Array.isArray(object)) {\n    return [object];\n  }\n\n  return object;\n}\n\nexport type withPrevAndCurrentMapFn<T, Transformed> = (\n  previous: Transformed | null,\n  current: T\n) => Transformed;\nexport function withPrevAndCurrent<T, Transformed>(\n  array: T[],\n  mapFn: withPrevAndCurrentMapFn<T, Transformed>\n): Transformed[] {\n  const previousArr: (null | Transformed)[] = [null];\n  const currentArr = [...array];\n  const transformedArr: Transformed[] = [];\n  currentArr.forEach((current, i) => {\n    const previous = previousArr[i];\n    const transformed = mapFn(previous, current);\n    previousArr.push(transformed);\n    transformedArr.push(transformed);\n  });\n  return transformedArr;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasProperty(object: object, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nexport function isJestEnv(): boolean {\n  // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n  return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n}\n\nexport function tagMessage(msg: string) {\n  return `[react-native-gesture-handler] ${msg}`;\n}\n\n// helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n// may not be initialized before the first render\nexport function isFabric(): boolean {\n  // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n  return !!global?.nativeFabricUIManager;\n}\n\nexport function shouldUseCodegenNativeComponent(): boolean {\n  const [majorStr, minorStr] = rnVersion.split('.');\n  const major = Number.parseInt(majorStr);\n  const minor = Number.parseInt(minorStr);\n\n  // use codegenNativeComponent starting with RN 0.68\n  return minor >= 68 || major > 0;\n}\n\nexport function isRemoteDebuggingEnabled(): boolean {\n  // react-native-reanimated checks if in remote debugging in the same way\n  // @ts-ignore global is available but node types are not included\n  return !(global as any).nativeCallSyncHook || (global as any).__REMOTEDEV__;\n}\n"]},"metadata":{},"sourceType":"module"}