{"ast":null,"code":"export default function getDrawerStatusFromState(state) {\n  var _entry$status;\n\n  if (state.history == null) {\n    throw new Error(\"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\");\n  }\n\n  var entry = state.history.find(function (it) {\n    return it.type === 'drawer';\n  });\n  return (_entry$status = entry === null || entry === void 0 ? void 0 : entry.status) !== null && _entry$status !== void 0 ? _entry$status : 'closed';\n}","map":{"version":3,"sources":["getDrawerStatusFromState.tsx"],"names":["state","entry","it"],"mappings":"AAKA,eAAe,SAAA,wBAAA,CAAA,KAAA,EAEb;EAAA,IAAA,aAAA;;EACA,IAAIA,KAAK,CAALA,OAAAA,IAAJ,IAAA,EAA2B;IACzB,MAAM,IAAA,KAAA,CAAN,sGAAM,CAAN;EAGD;;EAED,IAAMC,KAAK,GAAGD,KAAK,CAALA,OAAAA,CAAAA,IAAAA,CAAoBE,UAAAA,EAAD;IAAA,OAAQA,EAAE,CAAFA,IAAAA,KAAzC,QAAiC;EAAA,CAAnBF,CAAd;EAIA,OAAA,CAAA,aAAA,GAAOC,KAAP,KAAA,IAAOA,IAAAA,KAAP,KAAA,KAAA,CAAOA,GAAP,KAAA,CAAOA,GAAAA,KAAK,CAAZ,MAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,aAAA,GAAA,QAAA;AACD","sourcesContent":["import type {\n  DrawerNavigationState,\n  ParamListBase,\n} from '@react-navigation/native';\n\nexport default function getDrawerStatusFromState(\n  state: DrawerNavigationState<ParamListBase>\n) {\n  if (state.history == null) {\n    throw new Error(\n      \"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\"\n    );\n  }\n\n  const entry = state.history.find((it) => it.type === 'drawer') as\n    | { type: 'drawer'; status: 'open' }\n    | undefined;\n\n  return entry?.status ?? 'closed';\n}\n"]},"metadata":{},"sourceType":"module"}